
Byggern.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00000458  000004ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000458  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800106  00800106  000004f2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004f2  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  00000522  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000002d9  00000000  00000000  0000057a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000245  00000000  00000000  00000853  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000234  00000000  00000000  00000a98  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000078  00000000  00000000  00000ccc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001bd  00000000  00000000  00000d44  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000ad  00000000  00000000  00000f01  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  00000fae  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e8 e5       	ldi	r30, 0x58	; 88
  84:	f4 e0       	ldi	r31, 0x04	; 4
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a6 30       	cpi	r26, 0x06	; 6
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a6 e0       	ldi	r26, 0x06	; 6
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a0 31       	cpi	r26, 0x10	; 16
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 57 00 	call	0xae	; 0xae <main>
  a6:	0c 94 2a 02 	jmp	0x454	; 0x454 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <main>:
unsigned char TestChar = 'k';

int main(void)
{
	// Output (the whole port)
	DDRA = 0xFF;
  ae:	8f ef       	ldi	r24, 0xFF	; 255
  b0:	8a bb       	out	0x1a, r24	; 26
	// output (the whole port)
	DDRE = 0xFF;
  b2:	86 b9       	out	0x06, r24	; 6
	//TODO:: Please write your application code
	//fdevopen(char a);
	
	PORTE = 0xFF;
  b4:	87 b9       	out	0x07, r24	; 7
	char name[100];

	
	unsigned int i = 1;
	int j = 1;
	UartInit();
  b6:	0e 94 87 00 	call	0x10e	; 0x10e <UartInit>
	
	char name[100];

	
	unsigned int i = 1;
	int j = 1;
  ba:	21 e0       	ldi	r18, 0x01	; 1
  bc:	30 e0       	ldi	r19, 0x00	; 0
	PORTE = 0xFF;
	
	char name[100];

	
	unsigned int i = 1;
  be:	81 e0       	ldi	r24, 0x01	; 1
  c0:	90 e0       	ldi	r25, 0x00	; 0
				j = 1;
			}
			else
			{
				PORTA = 0x00;
				j = 0;
  c2:	50 e0       	ldi	r21, 0x00	; 0
  c4:	40 e0       	ldi	r20, 0x00	; 0
		if (i >= 10)
		{
			i = 0;
			if (j == 0)
			{
				PORTA = 0xFF;
  c6:	ef ef       	ldi	r30, 0xFF	; 255
				j = 1;
  c8:	71 e0       	ldi	r23, 0x01	; 1
  ca:	60 e0       	ldi	r22, 0x00	; 0
	    //scanf("%s", name);
		//printf("%s \n \n",name);
	
        //TODO:: Please write your application code 
		//fdevopen(char a);
		i++;
  cc:	01 96       	adiw	r24, 0x01	; 1
		
		if (i >= 10)
  ce:	8a 30       	cpi	r24, 0x0A	; 10
  d0:	91 05       	cpc	r25, r1
  d2:	e0 f3       	brcs	.-8      	; 0xcc <main+0x1e>
		{
			i = 0;
			if (j == 0)
  d4:	23 2b       	or	r18, r19
  d6:	21 f4       	brne	.+8      	; 0xe0 <main+0x32>
			{
				PORTA = 0xFF;
  d8:	eb bb       	out	0x1b, r30	; 27
				j = 1;
  da:	27 2f       	mov	r18, r23
  dc:	36 2f       	mov	r19, r22
  de:	03 c0       	rjmp	.+6      	; 0xe6 <main+0x38>
			}
			else
			{
				PORTA = 0x00;
  e0:	1b ba       	out	0x1b, r1	; 27
				j = 0;
  e2:	25 2f       	mov	r18, r21
  e4:	34 2f       	mov	r19, r20
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  e6:	8f ef       	ldi	r24, 0xFF	; 255
  e8:	9f ef       	ldi	r25, 0xFF	; 255
  ea:	fe e0       	ldi	r31, 0x0E	; 14
  ec:	81 50       	subi	r24, 0x01	; 1
  ee:	90 40       	sbci	r25, 0x00	; 0
  f0:	f0 40       	sbci	r31, 0x00	; 0
  f2:	e1 f7       	brne	.-8      	; 0xec <main+0x3e>
  f4:	00 c0       	rjmp	.+0      	; 0xf6 <main+0x48>
  f6:	00 00       	nop
		//fdevopen(char a);
		i++;
		
		if (i >= 10)
		{
			i = 0;
  f8:	85 2f       	mov	r24, r21
  fa:	94 2f       	mov	r25, r20
  fc:	e7 cf       	rjmp	.-50     	; 0xcc <main+0x1e>

000000fe <USART_Receive>:


unsigned char USART_Receive(void)
	{
	//Wait for data to be received
	while ( !(UCSR0A & (1<<RXC0)) );
  fe:	5f 9b       	sbis	0x0b, 7	; 11
 100:	fe cf       	rjmp	.-4      	; 0xfe <USART_Receive>
	
	//Get and return received data from buffer
	return UDR0;
 102:	8c b1       	in	r24, 0x0c	; 12
	}
 104:	08 95       	ret

00000106 <USART_Transmit>:

void USART_Transmit( unsigned char data )
	{
	//Wait for empty transmit buffer
	while ( !( UCSR0A & (1<<UDRE0)) );
 106:	5d 9b       	sbis	0x0b, 5	; 11
 108:	fe cf       	rjmp	.-4      	; 0x106 <USART_Transmit>
	
	//Put data into buffer, sends the data
	UDR0 = data;
 10a:	8c b9       	out	0x0c, r24	; 12
 10c:	08 95       	ret

0000010e <UartInit>:
	//return UDR;
	
//}
void UartInit(){
	//Set Baud rate 9600
	UBRR0H = (unsigned char)(MYUBRR>>8);	// Setter de 8 mest signifikante bitene
 10e:	10 bc       	out	0x20, r1	; 32
	UBRR0L = (unsigned char)(MYUBRR);	// Setter de 8 minst signifikante bitene
 110:	8f e1       	ldi	r24, 0x1F	; 31
 112:	89 b9       	out	0x09, r24	; 9
	// Enable receiver and transmitter
	UCSR0B = (1<<RXEN0) | (1<<TXEN0);
 114:	88 e1       	ldi	r24, 0x18	; 24
 116:	8a b9       	out	0x0a, r24	; 10
	// 8N2
	UCSR0C = (1<<URSEL0) | (1<<USBS0) | (3<<UCSZ00);
 118:	8e e8       	ldi	r24, 0x8E	; 142
 11a:	80 bd       	out	0x20, r24	; 32
	fdevopen(&USART_Transmit, &USART_Receive);
 11c:	6f e7       	ldi	r22, 0x7F	; 127
 11e:	70 e0       	ldi	r23, 0x00	; 0
 120:	83 e8       	ldi	r24, 0x83	; 131
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	0e 94 95 00 	call	0x12a	; 0x12a <fdevopen>
 128:	08 95       	ret

0000012a <fdevopen>:
 12a:	0f 93       	push	r16
 12c:	1f 93       	push	r17
 12e:	cf 93       	push	r28
 130:	df 93       	push	r29
 132:	ec 01       	movw	r28, r24
 134:	8b 01       	movw	r16, r22
 136:	00 97       	sbiw	r24, 0x00	; 0
 138:	31 f4       	brne	.+12     	; 0x146 <fdevopen+0x1c>
 13a:	61 15       	cp	r22, r1
 13c:	71 05       	cpc	r23, r1
 13e:	19 f4       	brne	.+6      	; 0x146 <fdevopen+0x1c>
 140:	80 e0       	ldi	r24, 0x00	; 0
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	38 c0       	rjmp	.+112    	; 0x1b6 <fdevopen+0x8c>
 146:	6e e0       	ldi	r22, 0x0E	; 14
 148:	70 e0       	ldi	r23, 0x00	; 0
 14a:	81 e0       	ldi	r24, 0x01	; 1
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <calloc>
 152:	fc 01       	movw	r30, r24
 154:	00 97       	sbiw	r24, 0x00	; 0
 156:	a1 f3       	breq	.-24     	; 0x140 <fdevopen+0x16>
 158:	80 e8       	ldi	r24, 0x80	; 128
 15a:	83 83       	std	Z+3, r24	; 0x03
 15c:	01 15       	cp	r16, r1
 15e:	11 05       	cpc	r17, r1
 160:	71 f0       	breq	.+28     	; 0x17e <fdevopen+0x54>
 162:	13 87       	std	Z+11, r17	; 0x0b
 164:	02 87       	std	Z+10, r16	; 0x0a
 166:	81 e8       	ldi	r24, 0x81	; 129
 168:	83 83       	std	Z+3, r24	; 0x03
 16a:	80 91 06 01 	lds	r24, 0x0106
 16e:	90 91 07 01 	lds	r25, 0x0107
 172:	89 2b       	or	r24, r25
 174:	21 f4       	brne	.+8      	; 0x17e <fdevopen+0x54>
 176:	f0 93 07 01 	sts	0x0107, r31
 17a:	e0 93 06 01 	sts	0x0106, r30
 17e:	20 97       	sbiw	r28, 0x00	; 0
 180:	c9 f0       	breq	.+50     	; 0x1b4 <fdevopen+0x8a>
 182:	d1 87       	std	Z+9, r29	; 0x09
 184:	c0 87       	std	Z+8, r28	; 0x08
 186:	83 81       	ldd	r24, Z+3	; 0x03
 188:	82 60       	ori	r24, 0x02	; 2
 18a:	83 83       	std	Z+3, r24	; 0x03
 18c:	80 91 08 01 	lds	r24, 0x0108
 190:	90 91 09 01 	lds	r25, 0x0109
 194:	89 2b       	or	r24, r25
 196:	71 f4       	brne	.+28     	; 0x1b4 <fdevopen+0x8a>
 198:	f0 93 09 01 	sts	0x0109, r31
 19c:	e0 93 08 01 	sts	0x0108, r30
 1a0:	80 91 0a 01 	lds	r24, 0x010A
 1a4:	90 91 0b 01 	lds	r25, 0x010B
 1a8:	89 2b       	or	r24, r25
 1aa:	21 f4       	brne	.+8      	; 0x1b4 <fdevopen+0x8a>
 1ac:	f0 93 0b 01 	sts	0x010B, r31
 1b0:	e0 93 0a 01 	sts	0x010A, r30
 1b4:	cf 01       	movw	r24, r30
 1b6:	df 91       	pop	r29
 1b8:	cf 91       	pop	r28
 1ba:	1f 91       	pop	r17
 1bc:	0f 91       	pop	r16
 1be:	08 95       	ret

000001c0 <calloc>:
 1c0:	0f 93       	push	r16
 1c2:	1f 93       	push	r17
 1c4:	cf 93       	push	r28
 1c6:	df 93       	push	r29
 1c8:	86 9f       	mul	r24, r22
 1ca:	80 01       	movw	r16, r0
 1cc:	87 9f       	mul	r24, r23
 1ce:	10 0d       	add	r17, r0
 1d0:	96 9f       	mul	r25, r22
 1d2:	10 0d       	add	r17, r0
 1d4:	11 24       	eor	r1, r1
 1d6:	c8 01       	movw	r24, r16
 1d8:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <malloc>
 1dc:	ec 01       	movw	r28, r24
 1de:	00 97       	sbiw	r24, 0x00	; 0
 1e0:	29 f0       	breq	.+10     	; 0x1ec <calloc+0x2c>
 1e2:	a8 01       	movw	r20, r16
 1e4:	60 e0       	ldi	r22, 0x00	; 0
 1e6:	70 e0       	ldi	r23, 0x00	; 0
 1e8:	0e 94 23 02 	call	0x446	; 0x446 <memset>
 1ec:	ce 01       	movw	r24, r28
 1ee:	df 91       	pop	r29
 1f0:	cf 91       	pop	r28
 1f2:	1f 91       	pop	r17
 1f4:	0f 91       	pop	r16
 1f6:	08 95       	ret

000001f8 <malloc>:
 1f8:	cf 93       	push	r28
 1fa:	df 93       	push	r29
 1fc:	82 30       	cpi	r24, 0x02	; 2
 1fe:	91 05       	cpc	r25, r1
 200:	10 f4       	brcc	.+4      	; 0x206 <malloc+0xe>
 202:	82 e0       	ldi	r24, 0x02	; 2
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	e0 91 0e 01 	lds	r30, 0x010E
 20a:	f0 91 0f 01 	lds	r31, 0x010F
 20e:	20 e0       	ldi	r18, 0x00	; 0
 210:	30 e0       	ldi	r19, 0x00	; 0
 212:	a0 e0       	ldi	r26, 0x00	; 0
 214:	b0 e0       	ldi	r27, 0x00	; 0
 216:	30 97       	sbiw	r30, 0x00	; 0
 218:	39 f1       	breq	.+78     	; 0x268 <malloc+0x70>
 21a:	40 81       	ld	r20, Z
 21c:	51 81       	ldd	r21, Z+1	; 0x01
 21e:	48 17       	cp	r20, r24
 220:	59 07       	cpc	r21, r25
 222:	b8 f0       	brcs	.+46     	; 0x252 <malloc+0x5a>
 224:	48 17       	cp	r20, r24
 226:	59 07       	cpc	r21, r25
 228:	71 f4       	brne	.+28     	; 0x246 <malloc+0x4e>
 22a:	82 81       	ldd	r24, Z+2	; 0x02
 22c:	93 81       	ldd	r25, Z+3	; 0x03
 22e:	10 97       	sbiw	r26, 0x00	; 0
 230:	29 f0       	breq	.+10     	; 0x23c <malloc+0x44>
 232:	13 96       	adiw	r26, 0x03	; 3
 234:	9c 93       	st	X, r25
 236:	8e 93       	st	-X, r24
 238:	12 97       	sbiw	r26, 0x02	; 2
 23a:	2c c0       	rjmp	.+88     	; 0x294 <malloc+0x9c>
 23c:	90 93 0f 01 	sts	0x010F, r25
 240:	80 93 0e 01 	sts	0x010E, r24
 244:	27 c0       	rjmp	.+78     	; 0x294 <malloc+0x9c>
 246:	21 15       	cp	r18, r1
 248:	31 05       	cpc	r19, r1
 24a:	31 f0       	breq	.+12     	; 0x258 <malloc+0x60>
 24c:	42 17       	cp	r20, r18
 24e:	53 07       	cpc	r21, r19
 250:	18 f0       	brcs	.+6      	; 0x258 <malloc+0x60>
 252:	a9 01       	movw	r20, r18
 254:	db 01       	movw	r26, r22
 256:	01 c0       	rjmp	.+2      	; 0x25a <malloc+0x62>
 258:	ef 01       	movw	r28, r30
 25a:	9a 01       	movw	r18, r20
 25c:	bd 01       	movw	r22, r26
 25e:	df 01       	movw	r26, r30
 260:	02 80       	ldd	r0, Z+2	; 0x02
 262:	f3 81       	ldd	r31, Z+3	; 0x03
 264:	e0 2d       	mov	r30, r0
 266:	d7 cf       	rjmp	.-82     	; 0x216 <malloc+0x1e>
 268:	21 15       	cp	r18, r1
 26a:	31 05       	cpc	r19, r1
 26c:	f9 f0       	breq	.+62     	; 0x2ac <malloc+0xb4>
 26e:	28 1b       	sub	r18, r24
 270:	39 0b       	sbc	r19, r25
 272:	24 30       	cpi	r18, 0x04	; 4
 274:	31 05       	cpc	r19, r1
 276:	80 f4       	brcc	.+32     	; 0x298 <malloc+0xa0>
 278:	8a 81       	ldd	r24, Y+2	; 0x02
 27a:	9b 81       	ldd	r25, Y+3	; 0x03
 27c:	61 15       	cp	r22, r1
 27e:	71 05       	cpc	r23, r1
 280:	21 f0       	breq	.+8      	; 0x28a <malloc+0x92>
 282:	fb 01       	movw	r30, r22
 284:	93 83       	std	Z+3, r25	; 0x03
 286:	82 83       	std	Z+2, r24	; 0x02
 288:	04 c0       	rjmp	.+8      	; 0x292 <malloc+0x9a>
 28a:	90 93 0f 01 	sts	0x010F, r25
 28e:	80 93 0e 01 	sts	0x010E, r24
 292:	fe 01       	movw	r30, r28
 294:	32 96       	adiw	r30, 0x02	; 2
 296:	44 c0       	rjmp	.+136    	; 0x320 <malloc+0x128>
 298:	fe 01       	movw	r30, r28
 29a:	e2 0f       	add	r30, r18
 29c:	f3 1f       	adc	r31, r19
 29e:	81 93       	st	Z+, r24
 2a0:	91 93       	st	Z+, r25
 2a2:	22 50       	subi	r18, 0x02	; 2
 2a4:	31 09       	sbc	r19, r1
 2a6:	39 83       	std	Y+1, r19	; 0x01
 2a8:	28 83       	st	Y, r18
 2aa:	3a c0       	rjmp	.+116    	; 0x320 <malloc+0x128>
 2ac:	20 91 0c 01 	lds	r18, 0x010C
 2b0:	30 91 0d 01 	lds	r19, 0x010D
 2b4:	23 2b       	or	r18, r19
 2b6:	41 f4       	brne	.+16     	; 0x2c8 <malloc+0xd0>
 2b8:	20 91 02 01 	lds	r18, 0x0102
 2bc:	30 91 03 01 	lds	r19, 0x0103
 2c0:	30 93 0d 01 	sts	0x010D, r19
 2c4:	20 93 0c 01 	sts	0x010C, r18
 2c8:	20 91 00 01 	lds	r18, 0x0100
 2cc:	30 91 01 01 	lds	r19, 0x0101
 2d0:	21 15       	cp	r18, r1
 2d2:	31 05       	cpc	r19, r1
 2d4:	41 f4       	brne	.+16     	; 0x2e6 <malloc+0xee>
 2d6:	2d b7       	in	r18, 0x3d	; 61
 2d8:	3e b7       	in	r19, 0x3e	; 62
 2da:	40 91 04 01 	lds	r20, 0x0104
 2de:	50 91 05 01 	lds	r21, 0x0105
 2e2:	24 1b       	sub	r18, r20
 2e4:	35 0b       	sbc	r19, r21
 2e6:	e0 91 0c 01 	lds	r30, 0x010C
 2ea:	f0 91 0d 01 	lds	r31, 0x010D
 2ee:	e2 17       	cp	r30, r18
 2f0:	f3 07       	cpc	r31, r19
 2f2:	a0 f4       	brcc	.+40     	; 0x31c <malloc+0x124>
 2f4:	2e 1b       	sub	r18, r30
 2f6:	3f 0b       	sbc	r19, r31
 2f8:	28 17       	cp	r18, r24
 2fa:	39 07       	cpc	r19, r25
 2fc:	78 f0       	brcs	.+30     	; 0x31c <malloc+0x124>
 2fe:	ac 01       	movw	r20, r24
 300:	4e 5f       	subi	r20, 0xFE	; 254
 302:	5f 4f       	sbci	r21, 0xFF	; 255
 304:	24 17       	cp	r18, r20
 306:	35 07       	cpc	r19, r21
 308:	48 f0       	brcs	.+18     	; 0x31c <malloc+0x124>
 30a:	4e 0f       	add	r20, r30
 30c:	5f 1f       	adc	r21, r31
 30e:	50 93 0d 01 	sts	0x010D, r21
 312:	40 93 0c 01 	sts	0x010C, r20
 316:	81 93       	st	Z+, r24
 318:	91 93       	st	Z+, r25
 31a:	02 c0       	rjmp	.+4      	; 0x320 <malloc+0x128>
 31c:	e0 e0       	ldi	r30, 0x00	; 0
 31e:	f0 e0       	ldi	r31, 0x00	; 0
 320:	cf 01       	movw	r24, r30
 322:	df 91       	pop	r29
 324:	cf 91       	pop	r28
 326:	08 95       	ret

00000328 <free>:
 328:	cf 93       	push	r28
 32a:	df 93       	push	r29
 32c:	00 97       	sbiw	r24, 0x00	; 0
 32e:	09 f4       	brne	.+2      	; 0x332 <free+0xa>
 330:	87 c0       	rjmp	.+270    	; 0x440 <free+0x118>
 332:	fc 01       	movw	r30, r24
 334:	32 97       	sbiw	r30, 0x02	; 2
 336:	13 82       	std	Z+3, r1	; 0x03
 338:	12 82       	std	Z+2, r1	; 0x02
 33a:	c0 91 0e 01 	lds	r28, 0x010E
 33e:	d0 91 0f 01 	lds	r29, 0x010F
 342:	20 97       	sbiw	r28, 0x00	; 0
 344:	81 f4       	brne	.+32     	; 0x366 <free+0x3e>
 346:	20 81       	ld	r18, Z
 348:	31 81       	ldd	r19, Z+1	; 0x01
 34a:	28 0f       	add	r18, r24
 34c:	39 1f       	adc	r19, r25
 34e:	80 91 0c 01 	lds	r24, 0x010C
 352:	90 91 0d 01 	lds	r25, 0x010D
 356:	82 17       	cp	r24, r18
 358:	93 07       	cpc	r25, r19
 35a:	79 f5       	brne	.+94     	; 0x3ba <free+0x92>
 35c:	f0 93 0d 01 	sts	0x010D, r31
 360:	e0 93 0c 01 	sts	0x010C, r30
 364:	6d c0       	rjmp	.+218    	; 0x440 <free+0x118>
 366:	de 01       	movw	r26, r28
 368:	20 e0       	ldi	r18, 0x00	; 0
 36a:	30 e0       	ldi	r19, 0x00	; 0
 36c:	ae 17       	cp	r26, r30
 36e:	bf 07       	cpc	r27, r31
 370:	50 f4       	brcc	.+20     	; 0x386 <free+0x5e>
 372:	12 96       	adiw	r26, 0x02	; 2
 374:	4d 91       	ld	r20, X+
 376:	5c 91       	ld	r21, X
 378:	13 97       	sbiw	r26, 0x03	; 3
 37a:	9d 01       	movw	r18, r26
 37c:	41 15       	cp	r20, r1
 37e:	51 05       	cpc	r21, r1
 380:	09 f1       	breq	.+66     	; 0x3c4 <free+0x9c>
 382:	da 01       	movw	r26, r20
 384:	f3 cf       	rjmp	.-26     	; 0x36c <free+0x44>
 386:	b3 83       	std	Z+3, r27	; 0x03
 388:	a2 83       	std	Z+2, r26	; 0x02
 38a:	40 81       	ld	r20, Z
 38c:	51 81       	ldd	r21, Z+1	; 0x01
 38e:	84 0f       	add	r24, r20
 390:	95 1f       	adc	r25, r21
 392:	8a 17       	cp	r24, r26
 394:	9b 07       	cpc	r25, r27
 396:	71 f4       	brne	.+28     	; 0x3b4 <free+0x8c>
 398:	8d 91       	ld	r24, X+
 39a:	9c 91       	ld	r25, X
 39c:	11 97       	sbiw	r26, 0x01	; 1
 39e:	84 0f       	add	r24, r20
 3a0:	95 1f       	adc	r25, r21
 3a2:	02 96       	adiw	r24, 0x02	; 2
 3a4:	91 83       	std	Z+1, r25	; 0x01
 3a6:	80 83       	st	Z, r24
 3a8:	12 96       	adiw	r26, 0x02	; 2
 3aa:	8d 91       	ld	r24, X+
 3ac:	9c 91       	ld	r25, X
 3ae:	13 97       	sbiw	r26, 0x03	; 3
 3b0:	93 83       	std	Z+3, r25	; 0x03
 3b2:	82 83       	std	Z+2, r24	; 0x02
 3b4:	21 15       	cp	r18, r1
 3b6:	31 05       	cpc	r19, r1
 3b8:	29 f4       	brne	.+10     	; 0x3c4 <free+0x9c>
 3ba:	f0 93 0f 01 	sts	0x010F, r31
 3be:	e0 93 0e 01 	sts	0x010E, r30
 3c2:	3e c0       	rjmp	.+124    	; 0x440 <free+0x118>
 3c4:	d9 01       	movw	r26, r18
 3c6:	13 96       	adiw	r26, 0x03	; 3
 3c8:	fc 93       	st	X, r31
 3ca:	ee 93       	st	-X, r30
 3cc:	12 97       	sbiw	r26, 0x02	; 2
 3ce:	4d 91       	ld	r20, X+
 3d0:	5d 91       	ld	r21, X+
 3d2:	a4 0f       	add	r26, r20
 3d4:	b5 1f       	adc	r27, r21
 3d6:	ea 17       	cp	r30, r26
 3d8:	fb 07       	cpc	r31, r27
 3da:	79 f4       	brne	.+30     	; 0x3fa <free+0xd2>
 3dc:	80 81       	ld	r24, Z
 3de:	91 81       	ldd	r25, Z+1	; 0x01
 3e0:	84 0f       	add	r24, r20
 3e2:	95 1f       	adc	r25, r21
 3e4:	02 96       	adiw	r24, 0x02	; 2
 3e6:	d9 01       	movw	r26, r18
 3e8:	11 96       	adiw	r26, 0x01	; 1
 3ea:	9c 93       	st	X, r25
 3ec:	8e 93       	st	-X, r24
 3ee:	82 81       	ldd	r24, Z+2	; 0x02
 3f0:	93 81       	ldd	r25, Z+3	; 0x03
 3f2:	13 96       	adiw	r26, 0x03	; 3
 3f4:	9c 93       	st	X, r25
 3f6:	8e 93       	st	-X, r24
 3f8:	12 97       	sbiw	r26, 0x02	; 2
 3fa:	e0 e0       	ldi	r30, 0x00	; 0
 3fc:	f0 e0       	ldi	r31, 0x00	; 0
 3fe:	8a 81       	ldd	r24, Y+2	; 0x02
 400:	9b 81       	ldd	r25, Y+3	; 0x03
 402:	00 97       	sbiw	r24, 0x00	; 0
 404:	19 f0       	breq	.+6      	; 0x40c <free+0xe4>
 406:	fe 01       	movw	r30, r28
 408:	ec 01       	movw	r28, r24
 40a:	f9 cf       	rjmp	.-14     	; 0x3fe <free+0xd6>
 40c:	ce 01       	movw	r24, r28
 40e:	02 96       	adiw	r24, 0x02	; 2
 410:	28 81       	ld	r18, Y
 412:	39 81       	ldd	r19, Y+1	; 0x01
 414:	82 0f       	add	r24, r18
 416:	93 1f       	adc	r25, r19
 418:	20 91 0c 01 	lds	r18, 0x010C
 41c:	30 91 0d 01 	lds	r19, 0x010D
 420:	28 17       	cp	r18, r24
 422:	39 07       	cpc	r19, r25
 424:	69 f4       	brne	.+26     	; 0x440 <free+0x118>
 426:	30 97       	sbiw	r30, 0x00	; 0
 428:	29 f4       	brne	.+10     	; 0x434 <free+0x10c>
 42a:	10 92 0f 01 	sts	0x010F, r1
 42e:	10 92 0e 01 	sts	0x010E, r1
 432:	02 c0       	rjmp	.+4      	; 0x438 <free+0x110>
 434:	13 82       	std	Z+3, r1	; 0x03
 436:	12 82       	std	Z+2, r1	; 0x02
 438:	d0 93 0d 01 	sts	0x010D, r29
 43c:	c0 93 0c 01 	sts	0x010C, r28
 440:	df 91       	pop	r29
 442:	cf 91       	pop	r28
 444:	08 95       	ret

00000446 <memset>:
 446:	dc 01       	movw	r26, r24
 448:	01 c0       	rjmp	.+2      	; 0x44c <memset+0x6>
 44a:	6d 93       	st	X+, r22
 44c:	41 50       	subi	r20, 0x01	; 1
 44e:	50 40       	sbci	r21, 0x00	; 0
 450:	e0 f7       	brcc	.-8      	; 0x44a <memset+0x4>
 452:	08 95       	ret

00000454 <_exit>:
 454:	f8 94       	cli

00000456 <__stop_program>:
 456:	ff cf       	rjmp	.-2      	; 0x456 <__stop_program>
