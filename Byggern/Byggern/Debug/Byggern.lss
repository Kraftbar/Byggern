
Byggern.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  00000488  0000051c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000488  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  0080010c  0080010c  00000528  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000528  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  00000558  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000002f4  00000000  00000000  000005b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000025d  00000000  00000000  000008a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000237  00000000  00000000  00000b01  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000078  00000000  00000000  00000d38  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001bf  00000000  00000000  00000db0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000021  00000000  00000000  00000f6f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  00000f90  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e8 e8       	ldi	r30, 0x88	; 136
  84:	f4 e0       	ldi	r31, 0x04	; 4
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	ac 30       	cpi	r26, 0x0C	; 12
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	ac e0       	ldi	r26, 0x0C	; 12
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a6 31       	cpi	r26, 0x16	; 22
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 57 00 	call	0xae	; 0xae <main>
  a6:	0c 94 42 02 	jmp	0x484	; 0x484 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <main>:

int main(void)
{
	int i = 1;
	int j = 1;
	UartInit();
  ae:	0e 94 72 00 	call	0xe4	; 0xe4 <UartInit>
	printf("hola\n");
  b2:	86 e0       	ldi	r24, 0x06	; 6
  b4:	91 e0       	ldi	r25, 0x01	; 1
  b6:	0e 94 cb 00 	call	0x196	; 0x196 <puts>
    while(1)
    {
		// Buttons input (the whole port)
		DDRA = 0;
		// Leds output (the whole port)
		DDRB = 0xFF;
  ba:	8f ef       	ldi	r24, 0xFF	; 255
	UartInit();
	printf("hola\n");
    while(1)
    {
		// Buttons input (the whole port)
		DDRA = 0;
  bc:	1a ba       	out	0x1a, r1	; 26
		// Leds output (the whole port)
		DDRB = 0xFF;
  be:	87 bb       	out	0x17, r24	; 23
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c0:	2f ef       	ldi	r18, 0xFF	; 255
  c2:	3f e7       	ldi	r19, 0x7F	; 127
  c4:	91 e0       	ldi	r25, 0x01	; 1
  c6:	21 50       	subi	r18, 0x01	; 1
  c8:	30 40       	sbci	r19, 0x00	; 0
  ca:	90 40       	sbci	r25, 0x00	; 0
  cc:	e1 f7       	brne	.-8      	; 0xc6 <main+0x18>
  ce:	00 c0       	rjmp	.+0      	; 0xd0 <main+0x22>
  d0:	00 c0       	rjmp	.+0      	; 0xd2 <main+0x24>
  d2:	f4 cf       	rjmp	.-24     	; 0xbc <main+0xe>

000000d4 <USART_Receive>:


unsigned char USART_Receive(void)
	{
	//Wait for data to be received
	while ( !(UCSR0A & (1<<RXC0)) );
  d4:	5f 9b       	sbis	0x0b, 7	; 11
  d6:	fe cf       	rjmp	.-4      	; 0xd4 <USART_Receive>
	
	//Get and return received data from buffer
	return UDR0;
  d8:	8c b1       	in	r24, 0x0c	; 12
	}
  da:	08 95       	ret

000000dc <USART_Transmit>:

void USART_Transmit( unsigned char data )
	{
	//Wait for empty transmit buffer
	while ( !( UCSR0A & (1<<UDRE0)) );
  dc:	5d 9b       	sbis	0x0b, 5	; 11
  de:	fe cf       	rjmp	.-4      	; 0xdc <USART_Transmit>
	
	//Put data into buffer, sends the data
	UDR0 = data;
  e0:	8c b9       	out	0x0c, r24	; 12
  e2:	08 95       	ret

000000e4 <UartInit>:
	//return UDR;
	
//}
void UartInit(){
	//Set Baud rate 9600
	UBRR0H = (unsigned char)(MYUBRR>>8);	// Setter de 8 mest signifikante bitene
  e4:	10 bc       	out	0x20, r1	; 32
	UBRR0L = (unsigned char)(MYUBRR);	// Setter de 8 minst signifikante bitene
  e6:	8f e1       	ldi	r24, 0x1F	; 31
  e8:	89 b9       	out	0x09, r24	; 9
	// Enable receiver and transmitter
	UCSR0B = (1<<RXEN0) | (1<<TXEN0);
  ea:	88 e1       	ldi	r24, 0x18	; 24
  ec:	8a b9       	out	0x0a, r24	; 10
	// 8N2
	UCSR0C = (1<<URSEL0) | (1<<USBS0) | (3<<UCSZ00);
  ee:	8e e8       	ldi	r24, 0x8E	; 142
  f0:	80 bd       	out	0x20, r24	; 32
	fdevopen(&USART_Transmit, &USART_Receive);
  f2:	6a e6       	ldi	r22, 0x6A	; 106
  f4:	70 e0       	ldi	r23, 0x00	; 0
  f6:	8e e6       	ldi	r24, 0x6E	; 110
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	0e 94 80 00 	call	0x100	; 0x100 <fdevopen>
  fe:	08 95       	ret

00000100 <fdevopen>:
 100:	0f 93       	push	r16
 102:	1f 93       	push	r17
 104:	cf 93       	push	r28
 106:	df 93       	push	r29
 108:	ec 01       	movw	r28, r24
 10a:	8b 01       	movw	r16, r22
 10c:	00 97       	sbiw	r24, 0x00	; 0
 10e:	31 f4       	brne	.+12     	; 0x11c <fdevopen+0x1c>
 110:	61 15       	cp	r22, r1
 112:	71 05       	cpc	r23, r1
 114:	19 f4       	brne	.+6      	; 0x11c <fdevopen+0x1c>
 116:	80 e0       	ldi	r24, 0x00	; 0
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	38 c0       	rjmp	.+112    	; 0x18c <fdevopen+0x8c>
 11c:	6e e0       	ldi	r22, 0x0E	; 14
 11e:	70 e0       	ldi	r23, 0x00	; 0
 120:	81 e0       	ldi	r24, 0x01	; 1
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <calloc>
 128:	fc 01       	movw	r30, r24
 12a:	00 97       	sbiw	r24, 0x00	; 0
 12c:	a1 f3       	breq	.-24     	; 0x116 <fdevopen+0x16>
 12e:	80 e8       	ldi	r24, 0x80	; 128
 130:	83 83       	std	Z+3, r24	; 0x03
 132:	01 15       	cp	r16, r1
 134:	11 05       	cpc	r17, r1
 136:	71 f0       	breq	.+28     	; 0x154 <fdevopen+0x54>
 138:	13 87       	std	Z+11, r17	; 0x0b
 13a:	02 87       	std	Z+10, r16	; 0x0a
 13c:	81 e8       	ldi	r24, 0x81	; 129
 13e:	83 83       	std	Z+3, r24	; 0x03
 140:	80 91 0c 01 	lds	r24, 0x010C
 144:	90 91 0d 01 	lds	r25, 0x010D
 148:	89 2b       	or	r24, r25
 14a:	21 f4       	brne	.+8      	; 0x154 <fdevopen+0x54>
 14c:	f0 93 0d 01 	sts	0x010D, r31
 150:	e0 93 0c 01 	sts	0x010C, r30
 154:	20 97       	sbiw	r28, 0x00	; 0
 156:	c9 f0       	breq	.+50     	; 0x18a <fdevopen+0x8a>
 158:	d1 87       	std	Z+9, r29	; 0x09
 15a:	c0 87       	std	Z+8, r28	; 0x08
 15c:	83 81       	ldd	r24, Z+3	; 0x03
 15e:	82 60       	ori	r24, 0x02	; 2
 160:	83 83       	std	Z+3, r24	; 0x03
 162:	80 91 0e 01 	lds	r24, 0x010E
 166:	90 91 0f 01 	lds	r25, 0x010F
 16a:	89 2b       	or	r24, r25
 16c:	71 f4       	brne	.+28     	; 0x18a <fdevopen+0x8a>
 16e:	f0 93 0f 01 	sts	0x010F, r31
 172:	e0 93 0e 01 	sts	0x010E, r30
 176:	80 91 10 01 	lds	r24, 0x0110
 17a:	90 91 11 01 	lds	r25, 0x0111
 17e:	89 2b       	or	r24, r25
 180:	21 f4       	brne	.+8      	; 0x18a <fdevopen+0x8a>
 182:	f0 93 11 01 	sts	0x0111, r31
 186:	e0 93 10 01 	sts	0x0110, r30
 18a:	cf 01       	movw	r24, r30
 18c:	df 91       	pop	r29
 18e:	cf 91       	pop	r28
 190:	1f 91       	pop	r17
 192:	0f 91       	pop	r16
 194:	08 95       	ret

00000196 <puts>:
 196:	0f 93       	push	r16
 198:	1f 93       	push	r17
 19a:	cf 93       	push	r28
 19c:	df 93       	push	r29
 19e:	e0 91 0e 01 	lds	r30, 0x010E
 1a2:	f0 91 0f 01 	lds	r31, 0x010F
 1a6:	23 81       	ldd	r18, Z+3	; 0x03
 1a8:	21 ff       	sbrs	r18, 1
 1aa:	1b c0       	rjmp	.+54     	; 0x1e2 <puts+0x4c>
 1ac:	ec 01       	movw	r28, r24
 1ae:	00 e0       	ldi	r16, 0x00	; 0
 1b0:	10 e0       	ldi	r17, 0x00	; 0
 1b2:	89 91       	ld	r24, Y+
 1b4:	60 91 0e 01 	lds	r22, 0x010E
 1b8:	70 91 0f 01 	lds	r23, 0x010F
 1bc:	db 01       	movw	r26, r22
 1be:	18 96       	adiw	r26, 0x08	; 8
 1c0:	ed 91       	ld	r30, X+
 1c2:	fc 91       	ld	r31, X
 1c4:	19 97       	sbiw	r26, 0x09	; 9
 1c6:	88 23       	and	r24, r24
 1c8:	31 f0       	breq	.+12     	; 0x1d6 <puts+0x40>
 1ca:	09 95       	icall
 1cc:	89 2b       	or	r24, r25
 1ce:	89 f3       	breq	.-30     	; 0x1b2 <puts+0x1c>
 1d0:	0f ef       	ldi	r16, 0xFF	; 255
 1d2:	1f ef       	ldi	r17, 0xFF	; 255
 1d4:	ee cf       	rjmp	.-36     	; 0x1b2 <puts+0x1c>
 1d6:	8a e0       	ldi	r24, 0x0A	; 10
 1d8:	09 95       	icall
 1da:	89 2b       	or	r24, r25
 1dc:	11 f4       	brne	.+4      	; 0x1e2 <puts+0x4c>
 1de:	c8 01       	movw	r24, r16
 1e0:	02 c0       	rjmp	.+4      	; 0x1e6 <puts+0x50>
 1e2:	8f ef       	ldi	r24, 0xFF	; 255
 1e4:	9f ef       	ldi	r25, 0xFF	; 255
 1e6:	df 91       	pop	r29
 1e8:	cf 91       	pop	r28
 1ea:	1f 91       	pop	r17
 1ec:	0f 91       	pop	r16
 1ee:	08 95       	ret

000001f0 <calloc>:
 1f0:	0f 93       	push	r16
 1f2:	1f 93       	push	r17
 1f4:	cf 93       	push	r28
 1f6:	df 93       	push	r29
 1f8:	86 9f       	mul	r24, r22
 1fa:	80 01       	movw	r16, r0
 1fc:	87 9f       	mul	r24, r23
 1fe:	10 0d       	add	r17, r0
 200:	96 9f       	mul	r25, r22
 202:	10 0d       	add	r17, r0
 204:	11 24       	eor	r1, r1
 206:	c8 01       	movw	r24, r16
 208:	0e 94 14 01 	call	0x228	; 0x228 <malloc>
 20c:	ec 01       	movw	r28, r24
 20e:	00 97       	sbiw	r24, 0x00	; 0
 210:	29 f0       	breq	.+10     	; 0x21c <calloc+0x2c>
 212:	a8 01       	movw	r20, r16
 214:	60 e0       	ldi	r22, 0x00	; 0
 216:	70 e0       	ldi	r23, 0x00	; 0
 218:	0e 94 3b 02 	call	0x476	; 0x476 <memset>
 21c:	ce 01       	movw	r24, r28
 21e:	df 91       	pop	r29
 220:	cf 91       	pop	r28
 222:	1f 91       	pop	r17
 224:	0f 91       	pop	r16
 226:	08 95       	ret

00000228 <malloc>:
 228:	cf 93       	push	r28
 22a:	df 93       	push	r29
 22c:	82 30       	cpi	r24, 0x02	; 2
 22e:	91 05       	cpc	r25, r1
 230:	10 f4       	brcc	.+4      	; 0x236 <malloc+0xe>
 232:	82 e0       	ldi	r24, 0x02	; 2
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	e0 91 14 01 	lds	r30, 0x0114
 23a:	f0 91 15 01 	lds	r31, 0x0115
 23e:	20 e0       	ldi	r18, 0x00	; 0
 240:	30 e0       	ldi	r19, 0x00	; 0
 242:	a0 e0       	ldi	r26, 0x00	; 0
 244:	b0 e0       	ldi	r27, 0x00	; 0
 246:	30 97       	sbiw	r30, 0x00	; 0
 248:	39 f1       	breq	.+78     	; 0x298 <malloc+0x70>
 24a:	40 81       	ld	r20, Z
 24c:	51 81       	ldd	r21, Z+1	; 0x01
 24e:	48 17       	cp	r20, r24
 250:	59 07       	cpc	r21, r25
 252:	b8 f0       	brcs	.+46     	; 0x282 <malloc+0x5a>
 254:	48 17       	cp	r20, r24
 256:	59 07       	cpc	r21, r25
 258:	71 f4       	brne	.+28     	; 0x276 <malloc+0x4e>
 25a:	82 81       	ldd	r24, Z+2	; 0x02
 25c:	93 81       	ldd	r25, Z+3	; 0x03
 25e:	10 97       	sbiw	r26, 0x00	; 0
 260:	29 f0       	breq	.+10     	; 0x26c <malloc+0x44>
 262:	13 96       	adiw	r26, 0x03	; 3
 264:	9c 93       	st	X, r25
 266:	8e 93       	st	-X, r24
 268:	12 97       	sbiw	r26, 0x02	; 2
 26a:	2c c0       	rjmp	.+88     	; 0x2c4 <malloc+0x9c>
 26c:	90 93 15 01 	sts	0x0115, r25
 270:	80 93 14 01 	sts	0x0114, r24
 274:	27 c0       	rjmp	.+78     	; 0x2c4 <malloc+0x9c>
 276:	21 15       	cp	r18, r1
 278:	31 05       	cpc	r19, r1
 27a:	31 f0       	breq	.+12     	; 0x288 <malloc+0x60>
 27c:	42 17       	cp	r20, r18
 27e:	53 07       	cpc	r21, r19
 280:	18 f0       	brcs	.+6      	; 0x288 <malloc+0x60>
 282:	a9 01       	movw	r20, r18
 284:	db 01       	movw	r26, r22
 286:	01 c0       	rjmp	.+2      	; 0x28a <malloc+0x62>
 288:	ef 01       	movw	r28, r30
 28a:	9a 01       	movw	r18, r20
 28c:	bd 01       	movw	r22, r26
 28e:	df 01       	movw	r26, r30
 290:	02 80       	ldd	r0, Z+2	; 0x02
 292:	f3 81       	ldd	r31, Z+3	; 0x03
 294:	e0 2d       	mov	r30, r0
 296:	d7 cf       	rjmp	.-82     	; 0x246 <malloc+0x1e>
 298:	21 15       	cp	r18, r1
 29a:	31 05       	cpc	r19, r1
 29c:	f9 f0       	breq	.+62     	; 0x2dc <malloc+0xb4>
 29e:	28 1b       	sub	r18, r24
 2a0:	39 0b       	sbc	r19, r25
 2a2:	24 30       	cpi	r18, 0x04	; 4
 2a4:	31 05       	cpc	r19, r1
 2a6:	80 f4       	brcc	.+32     	; 0x2c8 <malloc+0xa0>
 2a8:	8a 81       	ldd	r24, Y+2	; 0x02
 2aa:	9b 81       	ldd	r25, Y+3	; 0x03
 2ac:	61 15       	cp	r22, r1
 2ae:	71 05       	cpc	r23, r1
 2b0:	21 f0       	breq	.+8      	; 0x2ba <malloc+0x92>
 2b2:	fb 01       	movw	r30, r22
 2b4:	93 83       	std	Z+3, r25	; 0x03
 2b6:	82 83       	std	Z+2, r24	; 0x02
 2b8:	04 c0       	rjmp	.+8      	; 0x2c2 <malloc+0x9a>
 2ba:	90 93 15 01 	sts	0x0115, r25
 2be:	80 93 14 01 	sts	0x0114, r24
 2c2:	fe 01       	movw	r30, r28
 2c4:	32 96       	adiw	r30, 0x02	; 2
 2c6:	44 c0       	rjmp	.+136    	; 0x350 <malloc+0x128>
 2c8:	fe 01       	movw	r30, r28
 2ca:	e2 0f       	add	r30, r18
 2cc:	f3 1f       	adc	r31, r19
 2ce:	81 93       	st	Z+, r24
 2d0:	91 93       	st	Z+, r25
 2d2:	22 50       	subi	r18, 0x02	; 2
 2d4:	31 09       	sbc	r19, r1
 2d6:	39 83       	std	Y+1, r19	; 0x01
 2d8:	28 83       	st	Y, r18
 2da:	3a c0       	rjmp	.+116    	; 0x350 <malloc+0x128>
 2dc:	20 91 12 01 	lds	r18, 0x0112
 2e0:	30 91 13 01 	lds	r19, 0x0113
 2e4:	23 2b       	or	r18, r19
 2e6:	41 f4       	brne	.+16     	; 0x2f8 <malloc+0xd0>
 2e8:	20 91 02 01 	lds	r18, 0x0102
 2ec:	30 91 03 01 	lds	r19, 0x0103
 2f0:	30 93 13 01 	sts	0x0113, r19
 2f4:	20 93 12 01 	sts	0x0112, r18
 2f8:	20 91 00 01 	lds	r18, 0x0100
 2fc:	30 91 01 01 	lds	r19, 0x0101
 300:	21 15       	cp	r18, r1
 302:	31 05       	cpc	r19, r1
 304:	41 f4       	brne	.+16     	; 0x316 <malloc+0xee>
 306:	2d b7       	in	r18, 0x3d	; 61
 308:	3e b7       	in	r19, 0x3e	; 62
 30a:	40 91 04 01 	lds	r20, 0x0104
 30e:	50 91 05 01 	lds	r21, 0x0105
 312:	24 1b       	sub	r18, r20
 314:	35 0b       	sbc	r19, r21
 316:	e0 91 12 01 	lds	r30, 0x0112
 31a:	f0 91 13 01 	lds	r31, 0x0113
 31e:	e2 17       	cp	r30, r18
 320:	f3 07       	cpc	r31, r19
 322:	a0 f4       	brcc	.+40     	; 0x34c <malloc+0x124>
 324:	2e 1b       	sub	r18, r30
 326:	3f 0b       	sbc	r19, r31
 328:	28 17       	cp	r18, r24
 32a:	39 07       	cpc	r19, r25
 32c:	78 f0       	brcs	.+30     	; 0x34c <malloc+0x124>
 32e:	ac 01       	movw	r20, r24
 330:	4e 5f       	subi	r20, 0xFE	; 254
 332:	5f 4f       	sbci	r21, 0xFF	; 255
 334:	24 17       	cp	r18, r20
 336:	35 07       	cpc	r19, r21
 338:	48 f0       	brcs	.+18     	; 0x34c <malloc+0x124>
 33a:	4e 0f       	add	r20, r30
 33c:	5f 1f       	adc	r21, r31
 33e:	50 93 13 01 	sts	0x0113, r21
 342:	40 93 12 01 	sts	0x0112, r20
 346:	81 93       	st	Z+, r24
 348:	91 93       	st	Z+, r25
 34a:	02 c0       	rjmp	.+4      	; 0x350 <malloc+0x128>
 34c:	e0 e0       	ldi	r30, 0x00	; 0
 34e:	f0 e0       	ldi	r31, 0x00	; 0
 350:	cf 01       	movw	r24, r30
 352:	df 91       	pop	r29
 354:	cf 91       	pop	r28
 356:	08 95       	ret

00000358 <free>:
 358:	cf 93       	push	r28
 35a:	df 93       	push	r29
 35c:	00 97       	sbiw	r24, 0x00	; 0
 35e:	09 f4       	brne	.+2      	; 0x362 <free+0xa>
 360:	87 c0       	rjmp	.+270    	; 0x470 <free+0x118>
 362:	fc 01       	movw	r30, r24
 364:	32 97       	sbiw	r30, 0x02	; 2
 366:	13 82       	std	Z+3, r1	; 0x03
 368:	12 82       	std	Z+2, r1	; 0x02
 36a:	c0 91 14 01 	lds	r28, 0x0114
 36e:	d0 91 15 01 	lds	r29, 0x0115
 372:	20 97       	sbiw	r28, 0x00	; 0
 374:	81 f4       	brne	.+32     	; 0x396 <free+0x3e>
 376:	20 81       	ld	r18, Z
 378:	31 81       	ldd	r19, Z+1	; 0x01
 37a:	28 0f       	add	r18, r24
 37c:	39 1f       	adc	r19, r25
 37e:	80 91 12 01 	lds	r24, 0x0112
 382:	90 91 13 01 	lds	r25, 0x0113
 386:	82 17       	cp	r24, r18
 388:	93 07       	cpc	r25, r19
 38a:	79 f5       	brne	.+94     	; 0x3ea <free+0x92>
 38c:	f0 93 13 01 	sts	0x0113, r31
 390:	e0 93 12 01 	sts	0x0112, r30
 394:	6d c0       	rjmp	.+218    	; 0x470 <free+0x118>
 396:	de 01       	movw	r26, r28
 398:	20 e0       	ldi	r18, 0x00	; 0
 39a:	30 e0       	ldi	r19, 0x00	; 0
 39c:	ae 17       	cp	r26, r30
 39e:	bf 07       	cpc	r27, r31
 3a0:	50 f4       	brcc	.+20     	; 0x3b6 <free+0x5e>
 3a2:	12 96       	adiw	r26, 0x02	; 2
 3a4:	4d 91       	ld	r20, X+
 3a6:	5c 91       	ld	r21, X
 3a8:	13 97       	sbiw	r26, 0x03	; 3
 3aa:	9d 01       	movw	r18, r26
 3ac:	41 15       	cp	r20, r1
 3ae:	51 05       	cpc	r21, r1
 3b0:	09 f1       	breq	.+66     	; 0x3f4 <free+0x9c>
 3b2:	da 01       	movw	r26, r20
 3b4:	f3 cf       	rjmp	.-26     	; 0x39c <free+0x44>
 3b6:	b3 83       	std	Z+3, r27	; 0x03
 3b8:	a2 83       	std	Z+2, r26	; 0x02
 3ba:	40 81       	ld	r20, Z
 3bc:	51 81       	ldd	r21, Z+1	; 0x01
 3be:	84 0f       	add	r24, r20
 3c0:	95 1f       	adc	r25, r21
 3c2:	8a 17       	cp	r24, r26
 3c4:	9b 07       	cpc	r25, r27
 3c6:	71 f4       	brne	.+28     	; 0x3e4 <free+0x8c>
 3c8:	8d 91       	ld	r24, X+
 3ca:	9c 91       	ld	r25, X
 3cc:	11 97       	sbiw	r26, 0x01	; 1
 3ce:	84 0f       	add	r24, r20
 3d0:	95 1f       	adc	r25, r21
 3d2:	02 96       	adiw	r24, 0x02	; 2
 3d4:	91 83       	std	Z+1, r25	; 0x01
 3d6:	80 83       	st	Z, r24
 3d8:	12 96       	adiw	r26, 0x02	; 2
 3da:	8d 91       	ld	r24, X+
 3dc:	9c 91       	ld	r25, X
 3de:	13 97       	sbiw	r26, 0x03	; 3
 3e0:	93 83       	std	Z+3, r25	; 0x03
 3e2:	82 83       	std	Z+2, r24	; 0x02
 3e4:	21 15       	cp	r18, r1
 3e6:	31 05       	cpc	r19, r1
 3e8:	29 f4       	brne	.+10     	; 0x3f4 <free+0x9c>
 3ea:	f0 93 15 01 	sts	0x0115, r31
 3ee:	e0 93 14 01 	sts	0x0114, r30
 3f2:	3e c0       	rjmp	.+124    	; 0x470 <free+0x118>
 3f4:	d9 01       	movw	r26, r18
 3f6:	13 96       	adiw	r26, 0x03	; 3
 3f8:	fc 93       	st	X, r31
 3fa:	ee 93       	st	-X, r30
 3fc:	12 97       	sbiw	r26, 0x02	; 2
 3fe:	4d 91       	ld	r20, X+
 400:	5d 91       	ld	r21, X+
 402:	a4 0f       	add	r26, r20
 404:	b5 1f       	adc	r27, r21
 406:	ea 17       	cp	r30, r26
 408:	fb 07       	cpc	r31, r27
 40a:	79 f4       	brne	.+30     	; 0x42a <free+0xd2>
 40c:	80 81       	ld	r24, Z
 40e:	91 81       	ldd	r25, Z+1	; 0x01
 410:	84 0f       	add	r24, r20
 412:	95 1f       	adc	r25, r21
 414:	02 96       	adiw	r24, 0x02	; 2
 416:	d9 01       	movw	r26, r18
 418:	11 96       	adiw	r26, 0x01	; 1
 41a:	9c 93       	st	X, r25
 41c:	8e 93       	st	-X, r24
 41e:	82 81       	ldd	r24, Z+2	; 0x02
 420:	93 81       	ldd	r25, Z+3	; 0x03
 422:	13 96       	adiw	r26, 0x03	; 3
 424:	9c 93       	st	X, r25
 426:	8e 93       	st	-X, r24
 428:	12 97       	sbiw	r26, 0x02	; 2
 42a:	e0 e0       	ldi	r30, 0x00	; 0
 42c:	f0 e0       	ldi	r31, 0x00	; 0
 42e:	8a 81       	ldd	r24, Y+2	; 0x02
 430:	9b 81       	ldd	r25, Y+3	; 0x03
 432:	00 97       	sbiw	r24, 0x00	; 0
 434:	19 f0       	breq	.+6      	; 0x43c <free+0xe4>
 436:	fe 01       	movw	r30, r28
 438:	ec 01       	movw	r28, r24
 43a:	f9 cf       	rjmp	.-14     	; 0x42e <free+0xd6>
 43c:	ce 01       	movw	r24, r28
 43e:	02 96       	adiw	r24, 0x02	; 2
 440:	28 81       	ld	r18, Y
 442:	39 81       	ldd	r19, Y+1	; 0x01
 444:	82 0f       	add	r24, r18
 446:	93 1f       	adc	r25, r19
 448:	20 91 12 01 	lds	r18, 0x0112
 44c:	30 91 13 01 	lds	r19, 0x0113
 450:	28 17       	cp	r18, r24
 452:	39 07       	cpc	r19, r25
 454:	69 f4       	brne	.+26     	; 0x470 <free+0x118>
 456:	30 97       	sbiw	r30, 0x00	; 0
 458:	29 f4       	brne	.+10     	; 0x464 <free+0x10c>
 45a:	10 92 15 01 	sts	0x0115, r1
 45e:	10 92 14 01 	sts	0x0114, r1
 462:	02 c0       	rjmp	.+4      	; 0x468 <free+0x110>
 464:	13 82       	std	Z+3, r1	; 0x03
 466:	12 82       	std	Z+2, r1	; 0x02
 468:	d0 93 13 01 	sts	0x0113, r29
 46c:	c0 93 12 01 	sts	0x0112, r28
 470:	df 91       	pop	r29
 472:	cf 91       	pop	r28
 474:	08 95       	ret

00000476 <memset>:
 476:	dc 01       	movw	r26, r24
 478:	01 c0       	rjmp	.+2      	; 0x47c <memset+0x6>
 47a:	6d 93       	st	X+, r22
 47c:	41 50       	subi	r20, 0x01	; 1
 47e:	50 40       	sbci	r21, 0x00	; 0
 480:	e0 f7       	brcc	.-8      	; 0x47a <memset+0x4>
 482:	08 95       	ret

00000484 <_exit>:
 484:	f8 94       	cli

00000486 <__stop_program>:
 486:	ff cf       	rjmp	.-2      	; 0x486 <__stop_program>
